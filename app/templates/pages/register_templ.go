// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.707
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"fmt"
	"github.com/Sourjaya/converse/app/templates/components"
	"github.com/Sourjaya/converse/app/templates/layouts"
	v "github.com/Sourjaya/converse/app/validate"
)

type RegisterPageData struct {
	FormValues RegisterFormValues
	FormErrors v.Errors
}

type RegisterFormValues struct {
	Email           string `form:"email"`
	FirstName       string `form:"firstName"`
	LastName        string `form:"lastName"`
	Username        string `json:"username" form:"username"`
	ProfilePic      string `json:"profilePic" form:"profilePic"`
	Password        string `json:"password" form:"password"`
	PasswordConfirm string `form:"passwordConfirm"`
	Uuid            string
}

type Toggle struct {
	Password    string
	ConfirmPass string
}

func Register(data RegisterPageData) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"container\" class=\"w-full justify-center\"><div class=\"mt-10 lg:mt-20\"><img src=\"assets/favicon_light/android-chrome-512x512.png\" alt=\"Light Logo\" class=\"max-w-sm mx-auto px-6 pb-1 md:pb-4 size-32 object-contain\" x-show=\"theme === &#39;dark&#39;\"> <img src=\"assets/favicon_dark/android-chrome-512x512.png\" alt=\"Dark Logo\" class=\"max-w-sm mx-auto px-6 pb-1 md:pb-4 size-32 object-contain\" x-show=\"theme === &#39;light&#39;\"><div id=\"register-card\" class=\"max-w-sm sm:max-w-lg mx-auto sm:border sm:rounded-md sm:shadow-sm py-12 px-6 flex flex-col gap-8\"><h2 class=\"text-center text-2xl font-medium\">Signup</h2>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = RegisterForm(&data.FormValues, data.FormErrors).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layouts.App().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func RegisterForm(values *RegisterFormValues, errors v.Errors) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<form id=\"registrationform\" hx-post=\"/registration?page=1\" class=\"slide-transition flex flex-col gap-4\" hx-swap=\"outerHTML transition:true\" hx-indicator=\".progress\" hx-target=\"body\"><div id=\"swap\"><div class=\"input-group flex flex-col gap-1 relative\"><input hx-post=\"/registration?check=email\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(errors.Has("email")))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"email\" id=\"email\" hx-swap=\"multi:#swap:outerHTML,#submit1:outerHTML\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(values.Email)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 66, Col: 25}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" required autocomplete=\"email\" hx-indicator=\"#loading\" hx-sync=\"closest form:drop\"> <label for=\"email\">Email </label><div id=\"loading\" class=\"htmx-indicator absolute right-3 top-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Loading().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if errors.Has("email") {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"text-red-500 text-xs\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(errors.Get("email")[0])
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 80, Col: 62}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><button id=\"submit1\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, buttonAttrs(true, "submit1"))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(">Send OTP</button><div class=\"flex flex-row items-center justify-center text-center text-sm font-medium space-x-1 text-gray-500\"><p>Already have an account?</p><a class=\"flex flex-row items-center text-blue-600\" href=\"/login\" target=\"\" rel=\"noopener noreferrer\">Login</a></div></form>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func OtpPage(values *RegisterFormValues) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var6 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var6 == nil {
			templ_7745c5c3_Var6 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var7 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"container\" class=\"w-full justify-center\"><div class=\"mt-10 lg:mt-20\"><img src=\"assets/favicon_light/android-chrome-512x512.png\" alt=\"Light Logo\" class=\"max-w-sm mx-auto px-6 pb-1 md:pb-4 size-32 object-contain\" x-show=\"theme === &#39;dark&#39;\"> <img src=\"assets/favicon_dark/android-chrome-512x512.png\" alt=\"Dark Logo\" class=\"max-w-sm mx-auto px-6 pb-1 md:pb-4 size-32 object-contain\" x-show=\"theme === &#39;light&#39;\"><div id=\"register-card\" class=\"max-w-sm sm:max-w-lg mx-auto sm:border sm:rounded-md sm:shadow-sm py-12 px-6 flex flex-col gap-8\"><h2 class=\"text-center text-2xl font-medium\">Signup</h2>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = Otp(values).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layouts.App().Render(templ.WithChildren(ctx, templ_7745c5c3_Var7), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func Otp(values *RegisterFormValues) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var8 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var8 == nil {
			templ_7745c5c3_Var8 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div hx-target=\"this\" class=\"slide-transition\" hx-swap=\"outerHTML transition:true\"><header class=\"flex flex-col items-center justify-center text-8xl\"><i class=\"bx bx-check-shield\"></i></header><div class=\"flex flex-row items-center justify-center text-sm font-medium text-inherit p-4\"><p>We have sent a code to your email</p></div><form")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, htmxAttrs("post", fmt.Sprintf("/registration?page=2&id=%s", values.Uuid)))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" class=\"flex flex-col gap-4\" hx-indicator=\".progress\"><div class=\"flex flex-col space-y-16\"><div class=\"flex flex-row items-center justify-between mx-auto w-full max-w-xs\"><input required name=\"otp1\" maxlength=\"1\" class=\"w-16 h-16 py-0.5 flex flex-col items-center justify-center text-center px-5 outline-none rounded-2xl border-2 border-solid text-lg bg-inherit focus:border-cyan-300 focus:ring-1 ring-blue-700\" type=\"text\" name=\"\" id=\"\"> <input required name=\"otp2\" maxlength=\"1\" disabled class=\"w-16 h-16 py-0.5 flex flex-col items-center justify-center text-center px-5 outline-none rounded-2xl border-2 border-solid text-lg bg-inherit focus:border-cyan-300 focus:ring-1 ring-blue-700\" type=\"text\" name=\"\" id=\"\"> <input required name=\"otp3\" maxlength=\"1\" disabled class=\"w-16 h-16 py-0.5 flex flex-col items-center justify-center text-center px-5 outline-none rounded-2xl border-2 border-solid text-lg bg-inherit focus:border-cyan-300 focus:ring-1 ring-blue-700\" type=\"text\" name=\"\" id=\"\"> <input required name=\"otp4\" maxlength=\"1\" disabled class=\"w-16 h-16 py-0.5 flex flex-col items-center justify-center text-center px-5 outline-none rounded-2xl border-2 border-solid text-lg bg-inherit focus:border-cyan-300 focus:ring-1 ring-blue-700\" type=\"text\" name=\"\" id=\"\"></div><div class=\"flex flex-col space-y-5\"><div class=\"flex flex-col items-center justify-center\"><button id=\"submit2\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, buttonAttrs(false, "submit2"))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(">Enter OTP</button></div><div class=\"flex flex-row items-center justify-center text-center text-sm font-medium space-x-1 text-gray-500\"><p>Didn't recieve code?</p><a")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, htmxAttrs("post", fmt.Sprintf("/registration?check=resendOTP&id=%s", values.Uuid)))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-target=\"#resend\" hx-indicator=\".progress\" hx-swap=\"outerHTML\" id=\"resend\" class=\"pointer-events-none cursor-default flex flex-row items-center text-blue-600\" rel=\"noopener noreferrer\">Resend in<span class=\"flex flex-row items-center text-blue-600 ml-1\" id=\"countdown\" style=\"display: none;\"></span></a></div></div></div></form></div><script>\n\t \t\tconst inputs = document.querySelectorAll(\"input\"),\n  \t\tbutton = document.querySelector(\"button\");\n\n\t\t\t// iterate over all inputs\n\t\t\tinputs.forEach((input, index1) => {\n\t\t\tinput.addEventListener(\"keyup\", (e) => {\n\t\t\t\tconst currentInput = input,\n\t\t\t\t\tnextInput = input.nextElementSibling,\n\t\t\t\t\tprevInput = input.previousElementSibling;\n\t\t\t\t// if the next input is disabled and the current value is not empty\n\t\t\t\t//  enable the next input and focus on it\n\t\t\t\tif (nextInput && nextInput.hasAttribute(\"disabled\") && currentInput.value !== \"\") {\n\t\t\t\t\tnextInput.removeAttribute(\"disabled\");\n\t\t\t\t\tnextInput.focus();\n\t\t\t\t}\n\n\t\t\t\t// if the backspace key is pressed\n\t\t\t\tif (e.key === \"Backspace\") {\n\t\t\t\t\t// iterate over all inputs again\n\t\t\t\t\tinputs.forEach((input, index2) => {\n\t\t\t\t\t\tif (index1 <= index2 && prevInput) {\n\t\t\t\t\t\t\tinput.setAttribute(\"disabled\", true);\n\t\t\t\t\t\t\tinput.value = \"\";\n\t\t\t\t\t\t\tprevInput.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t//if the fourth input( which index number is 3) is not empty and has not disable attribute then\n\t\t\t\t//add active class if not then remove the active class.\n\t\t\t\tif (!inputs[3].disabled && inputs[3].value !== \"\") {\n\t\t\t\t\tbutton.classList.remove(\"pointer-events-none\");\n\t\t\t\t\tbutton.innerText=\"Verify OTP\"\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbutton.innerText=\"Enter OTP\"\n\t\t\t\tbutton.classList.add(\"pointer-events-none\");\n\t\t\t});\n\t\t\t});\n\t\t\tlet countdownTimer;\n\t\t\tfunction startCountdown(duration) {\n\t\t\t\t\t//console.log(\"timer started\")\n\t\t\t\t\tvar timer = duration, minutes, seconds;\n\t\t\t\t\tvar countdown = document.getElementById(\"countdown\");\n\t\t\t\t\tcountdown.style.display = \"inline-block\"; // Display countdown\n\n\t\t\t\t\tclearInterval(countdownTimer);\n\t\t\t\t\t// window.addEventListener('htmx:afterSettle',()=>{\n\t\t\t\t\t// \tclearInterval(countdownTimer);\n\t\t\t\t\t// });\n\t\t\t\tcountdownTimer =  setInterval(function () {\n\t\t\t\t\t\tminutes = parseInt(timer / 60, 10);\n\t\t\t\t\t\tseconds = parseInt(timer % 60, 10);\n\t\t\t\t\t\tminutes = minutes < 10 ? \"0\" + minutes : minutes;\n\t\t\t\t\t\tseconds = seconds < 10 ? \"0\" + seconds : seconds;\n\t\t\t\t\t\tcountdown.textContent = minutes + \":\" + seconds;\n\t\t\t\t\t\t//console.log(timer)\n\t\t\t\t\t\tif (--timer < 0) {\n\t\t\t\t\t\t\tclearInterval(countdownTimer);\n\t\t\t\t\t\t\tvar resend = document.getElementById(\"resend\");\n\t\t\t\t\t\t\tresend.classList.remove(\"pointer-events-none\", \"cursor-default\");\n\t\t\t\t\t\t\tresend.classList.add(\"pointer-events-auto\", \"cursor-pointer\");\n\t\t\t\t\t\t\tresend.textContent=\"Resend\"\n\t\t\t\t\t\t\tcountdown.style.display = \"none\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 1000);\n\t\t\t\t}\n\t\t\t\tconst otpRequestListener=()=>{\n\t\t\t\t\tinputs[0].focus();\n\t\t\t\t\tstartCountdown(120);\n\t\t\t\t} \n\t\t\t\t//focus the first input which index is 0 on window load\n\t\t\t\twindow.addEventListener(\"DOMContentLoaded\", otpRequestListener);\n\t\t\t\tfunction removeOTPRequestListener() {\n\t\t\t\t\twindow.removeEventListener('htmx:afterSettle', otpRequestListener);\n\t\t\t\t\tclearInterval(countdownTimer)\n\t\t\t\t}\n\t\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func EmailInput(values *RegisterFormValues, errors v.Errors) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var9 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var9 == nil {
			templ_7745c5c3_Var9 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"swap\"><div class=\"input-group flex flex-col gap-1\"><input hx-post=\"/registration?check=email\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(errors.Has("email")))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"email\" id=\"email\" hx-swap=\"multi:#swap:outerHTML,#submit1:outerHTML\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var10 string
		templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(values.Email)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 235, Col: 24}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" autocomplete=\"email\" hx-indicator=\"#loading\" required hx-sync=\"closest form:abort\"> <label for=\"email\">Email </label><div id=\"loading\" class=\"htmx-indicator absolute right-3 top-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Loading().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if errors.Has("email") {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"text-red-500 text-xs\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var11 string
			templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(errors.Get("email")[0])
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 249, Col: 61}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><button id=\"submit1\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, buttonAttrs(errors.Has("email"), "submit1"))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(">Send OTP</button>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func Resend(values *RegisterFormValues) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var12 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var12 == nil {
			templ_7745c5c3_Var12 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<a")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, htmxAttrs("post", fmt.Sprintf("/registration?check=resendOTP&id=%s", values.Uuid)))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-target=\"#resend\" hx-swap=\"outerHTML\" hx-indicator=\".progress\" id=\"resend\" class=\"pointer-events-none cursor-default flex flex-row items-center text-blue-600\" rel=\"noopener noreferrer\">Resend in <span class=\"flex flex-row items-center text-blue-600 ml-1\" id=\"countdown\" style=\"display: none;\"></span></a>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func DetailsForm(values *RegisterFormValues, errors v.Errors, toggle Toggle) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var13 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var13 == nil {
			templ_7745c5c3_Var13 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<form")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, htmxAttrs("post", fmt.Sprintf("/registration?page=3&id=%s", values.Uuid)))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" class=\"slide-transition flex flex-col gap-4\" hx-swap=\"outerHTML transition:true\" hx-indicator=\".progress\"><div id=\"swap1\"><div class=\"flex flex-col sm:flex-row gap-2\"><div class=\"input-group flex flex-col gap-1 relative\"><input")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, htmxAttrs("post", fmt.Sprintf("/registration?check=details&id=%s", values.Uuid)))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(errors.Has("firstName")))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"firstName\" id=\"firstName\" hx-swap=\"multi:#swap1:outerHTML,#submit3:outerHTML\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var14 string
		templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinStringErrs(values.FirstName)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 277, Col: 30}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" required autocomplete=\"firstName\" hx-indicator=\"#loading\" hx-sync=\"closest form:abort\"> <label for=\"firstName\">First Name</label><div id=\"loading\" class=\"htmx-indicator absolute right-3 top-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Loading().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if errors.Has("firstName") {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<ul class=\"list-disc ml-4\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, err := range errors.Get("firstName") {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<li class=\"text-red-500 text-xs\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var15 string
				templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(err)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 291, Col: 45}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</li>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"input-group flex flex-col gap-1 relative\"><input")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, htmxAttrs("post", fmt.Sprintf("/registration?check=details&id=%s", values.Uuid)))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-swap=\"multi:#swap1:outerHTML,#submit3:outerHTML\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(errors.Has("lastName")))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"lastName\" id=\"lastName\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var16 string
		templ_7745c5c3_Var16, templ_7745c5c3_Err = templ.JoinStringErrs(values.LastName)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 302, Col: 29}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var16))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" required autocomplete=\"email\" hx-indicator=\"#loading\" hx-sync=\"closest form:abort\"> <label for=\"lastName\">Last Name</label><div id=\"loading\" class=\"htmx-indicator absolute right-3 top-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Loading().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if errors.Has("lastName") {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<ul class=\"list-disc ml-4\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, err := range errors.Get("lastName") {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<li class=\"text-red-500 text-xs\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var17 string
				templ_7745c5c3_Var17, templ_7745c5c3_Err = templ.JoinStringErrs(err)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 316, Col: 45}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var17))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</li>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = PasswordInput(values, errors, toggle).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</form><script>\n\t\t\tremoveOTPRequestListener();\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func DetailsInput(values *RegisterFormValues, errors v.Errors) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var18 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var18 == nil {
			templ_7745c5c3_Var18 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"swap1\"><div class=\"flex flex-col sm:flex-row gap-2\"><div class=\"flex flex-col\"><div class=\"input-group flex flex-col gap-1 relative\"><input")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, htmxAttrs("post", fmt.Sprintf("/registration?check=details&id=%s", values.Uuid)))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(errors.Has("firstName")))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"firstName\" id=\"firstName\" hx-swap=\"multi:#swap1:outerHTML,#submit3:outerHTML\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var19 string
		templ_7745c5c3_Var19, templ_7745c5c3_Err = templ.JoinStringErrs(values.FirstName)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 340, Col: 30}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var19))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" required autocomplete=\"firstname\" hx-indicator=\"#loading\" hx-sync=\"closest form:abort\"> <label for=\"firstName\">First Name</label><div id=\"loading\" class=\"htmx-indicator absolute right-3 top-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Loading().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if errors.Has("firstName") {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<ul class=\"list-disc ml-4\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, err := range errors.Get("firstName") {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<li class=\"text-red-500 text-xs\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var20 string
				templ_7745c5c3_Var20, templ_7745c5c3_Err = templ.JoinStringErrs(err)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 354, Col: 45}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var20))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</li>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><div class=\"flex flex-col\"><div class=\"input-group flex flex-col gap-1 relative\"><input")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, htmxAttrs("post", fmt.Sprintf("/registration?check=details&id=%s", values.Uuid)))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-swap=\"multi:#swap1:outerHTML,#submit3:outerHTML\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(errors.Has("lastName")))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"lastName\" id=\"lastName\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var21 string
		templ_7745c5c3_Var21, templ_7745c5c3_Err = templ.JoinStringErrs(values.LastName)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 367, Col: 29}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var21))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" required autocomplete=\"email\" hx-indicator=\"#loading\" hx-sync=\"closest form:abort\"> <label for=\"lastName\">Last Name</label><div id=\"loading\" class=\"htmx-indicator absolute right-3 top-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Loading().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if errors.Has("lastName") {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<ul class=\"lsit-disc ml-4\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, err := range errors.Get("lastName") {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<li class=\"text-red-500 text-xs\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var22 string
				templ_7745c5c3_Var22, templ_7745c5c3_Err = templ.JoinStringErrs(err)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 381, Col: 45}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var22))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</li>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></div><button id=\"submit3\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, buttonAttrs(errors.Any(), "submit3"))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(">Next</button>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func typeAttrs(toggle string) templ.Attributes {
	var t string
	if toggle == "show" {
		t = "password"
	} else {
		t = "text"
	}
	return templ.Attributes{
		"type": t,
	}
}
func srcAttrs(toggle string) templ.Attributes {
	var src string
	if toggle == "show" {
		src = "/assets/icons/eye.png"
	} else {
		src = "/assets/icons/hide.png"
	}
	return templ.Attributes{
		"src": src,
	}
}

func htmxAttrs(postfix, uri string) templ.Attributes {
	if postfix == "post" {
		return templ.Attributes{
			"hx-post": uri,
		}
	} else {
		return templ.Attributes{
			"hx-get": uri,
		}
	}
}

func hxAttrs(method string, toggle Toggle, isPass bool) templ.Attributes {
	if method == "post" {
		return templ.Attributes{
			"hx-post": fmt.Sprintf("/registration?check=password&toggleP=%s&toggleC=%s", toggle.Password, toggle.ConfirmPass),
		}
	}
	if isPass {
		return templ.Attributes{
			"hx-post": fmt.Sprintf("/view?toggleP=%s&toggleC=%s", toggle.Password, toggle.ConfirmPass),
		}
	} else {
		return templ.Attributes{
			"hx-post": fmt.Sprintf("/viewC?toggleP=%s&toggleC=%s", toggle.Password, toggle.ConfirmPass),
		}
	}
}

func PasswordInput(values *RegisterFormValues, errors v.Errors, toggle Toggle) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var23 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var23 == nil {
			templ_7745c5c3_Var23 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"swap2\"><div class=\"flex flex-col\"><div class=\"input-group flex flex-col gap-1\"><input")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("post", toggle, true))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(errors.Has("password")))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, typeAttrs(toggle.Password))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"password\" id=\"password\" hx-swap=\"multi:#swap2:outerHTML,#submit3:outerHTML\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var24 string
		templ_7745c5c3_Var24, templ_7745c5c3_Err = templ.JoinStringErrs(values.Password)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 456, Col: 28}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var24))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" required hx-indicator=\"#loading\" hx-sync=\"closest form:drop\"> <label for=\"password\">Password</label><div id=\"show\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("toggle", toggle, true))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-swap=\"multi:#password:outerHTML,#show:outerHTML,#passwordConfirm:outerHTML,#showConfirm:outerHTML\" class=\"z-[2222] cursor-pointer size-4 absolute right-3 top-2\" hx-trigger=\"click\"><img")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, srcAttrs(toggle.Password))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" alt=\"show/hide\"></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if errors.Has("password") {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<ul>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, err := range errors.Get("password") {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<li class=\"text-red-500 text-xs\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var25 string
				templ_7745c5c3_Var25, templ_7745c5c3_Err = templ.JoinStringErrs(err)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 469, Col: 44}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var25))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</li>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><div class=\"flex flex-col\"><div class=\"input-group flex flex-col gap-1\"><input")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("post", toggle, false))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, typeAttrs(toggle.ConfirmPass))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(errors.Has("passwordConfirm")))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"passwordConfirm\" id=\"passwordConfirm\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var26 string
		templ_7745c5c3_Var26, templ_7745c5c3_Err = templ.JoinStringErrs(values.PasswordConfirm)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 482, Col: 35}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var26))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" hx-swap=\"multi:#swap2:outerHTML,#submit3:outerHTML\" required hx-indicator=\"#loading\" hx-sync=\"closest form:drop\"> <label for=\"passwordConfirm\">Confirm Password</label><div id=\"showConfirm\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("toggle", toggle, false))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-swap=\"multi:#passwordConfirm:outerHTML,#showConfirm:outerHTML,#password:outerHTML,#show:outerHTML\" class=\"z-[2222] cursor-pointer size-4 absolute right-3 top-2\" hx-trigger=\"click\"><img")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, srcAttrs(toggle.ConfirmPass))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" alt=\"show/hide\"></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if errors.Has("passwordConfirm") {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"text-red-500 text-xs\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var27 string
			templ_7745c5c3_Var27, templ_7745c5c3_Err = templ.JoinStringErrs(errors.Get("passwordConfirm")[0])
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 494, Col: 72}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var27))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div><button id=\"submit3\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, buttonAttrs(errors.Any(), "submit3"))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(">Next</button>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func ViewPassword(values *RegisterFormValues, toggle Toggle) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var28 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var28 == nil {
			templ_7745c5c3_Var28 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		if toggle.Password == "show" {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<input")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("post", Toggle{Password: "hide", ConfirmPass: toggle.ConfirmPass}, true))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(false))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, typeAttrs("hide"))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"password\" id=\"password\" hx-swap=\"multi:#swap2:outerHTML,#submit3:outerHTML\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var29 string
			templ_7745c5c3_Var29, templ_7745c5c3_Err = templ.JoinStringErrs(values.Password)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 512, Col: 26}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var29))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" required hx-indicator=\"#loading\" hx-sync=\"closest form:drop\"><div id=\"show\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("toggle", Toggle{Password: "hide", ConfirmPass: toggle.ConfirmPass}, true))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-swap=\"multi:#password:outerHTML,#show:outerHTML,#passwordConfirm:outerHTML,#showConfirm:outerHTML\" class=\"z-[2222] cursor-pointer size-4 absolute right-3 top-2\" hx-trigger=\"click\"><img")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, srcAttrs("hide"))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" alt=\"show/hide\"></div><input")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("post", Toggle{Password: "hide", ConfirmPass: toggle.ConfirmPass}, false))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, typeAttrs(toggle.ConfirmPass))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(false))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"passwordConfirm\" id=\"passwordConfirm\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var30 string
			templ_7745c5c3_Var30, templ_7745c5c3_Err = templ.JoinStringErrs(values.PasswordConfirm)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 526, Col: 33}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var30))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" hx-swap=\"multi:#swap2:outerHTML,#submit3:outerHTML\" required hx-indicator=\"#loading\" hx-sync=\"closest form:drop\"><div id=\"showConfirm\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("toggle", Toggle{Password: "hide", ConfirmPass: toggle.ConfirmPass}, false))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-swap=\"multi:#passwordConfirm:outerHTML,#showConfirm:outerHTML,#password:outerHTML,#show:outerHTML\" class=\"z-[2222] cursor-pointer size-4 absolute right-3 top-2\" hx-trigger=\"click\"><img")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, srcAttrs(toggle.ConfirmPass))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" alt=\"show/hide\"></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<input")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("post", Toggle{Password: "show", ConfirmPass: toggle.ConfirmPass}, true))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(false))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, typeAttrs("show"))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"password\" id=\"password\" hx-swap=\"multi:#swap2:outerHTML,#submit3:outerHTML\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var31 string
			templ_7745c5c3_Var31, templ_7745c5c3_Err = templ.JoinStringErrs(values.Password)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 543, Col: 26}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var31))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" required hx-indicator=\"#loading\" hx-sync=\"closest form:drop\"><div id=\"show\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("toggle", Toggle{Password: "show", ConfirmPass: toggle.ConfirmPass}, true))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-swap=\"multi:#password:outerHTML,#show:outerHTML,#passwordConfirm:outerHTML,#showConfirm:outerHTML\" class=\"z-[2222] cursor-pointer size-4 absolute right-3 top-2\" hx-trigger=\"click\"><img")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, srcAttrs("show"))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" alt=\"show/hide\"></div><input")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("post", Toggle{Password: "show", ConfirmPass: toggle.ConfirmPass}, false))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, typeAttrs(toggle.ConfirmPass))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(false))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"passwordConfirm\" id=\"passwordConfirm\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var32 string
			templ_7745c5c3_Var32, templ_7745c5c3_Err = templ.JoinStringErrs(values.PasswordConfirm)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 557, Col: 33}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var32))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" hx-swap=\"multi:#swap2:outerHTML,#submit3:outerHTML\" required hx-indicator=\"#loading\" hx-sync=\"closest form:drop\"><div id=\"showConfirm\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("toggle", Toggle{Password: "show", ConfirmPass: toggle.ConfirmPass}, false))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-swap=\"multi:#passwordConfirm:outerHTML,#showConfirm:outerHTML,#password:outerHTML,#show:outerHTML\" class=\"z-[2222] cursor-pointer size-4 absolute right-3 top-2\" hx-trigger=\"click\"><img")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, srcAttrs(toggle.ConfirmPass))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" alt=\"show/hide\"></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func ViewConfirmPassword(values *RegisterFormValues, toggle Toggle) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var33 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var33 == nil {
			templ_7745c5c3_Var33 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		if toggle.ConfirmPass == "show" {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<input")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("post", Toggle{Password: toggle.Password, ConfirmPass: "hide"}, true))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(false))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, typeAttrs(toggle.Password))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"password\" id=\"password\" hx-swap=\"multi:#swap2:outerHTML,#submit3:outerHTML\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var34 string
			templ_7745c5c3_Var34, templ_7745c5c3_Err = templ.JoinStringErrs(values.Password)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 578, Col: 26}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var34))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" required hx-indicator=\"#loading\" hx-sync=\"closest form:drop\"><div id=\"show\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("toggle", Toggle{Password: toggle.Password, ConfirmPass: "hide"}, true))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-swap=\"multi:#password:outerHTML,#show:outerHTML,#passwordConfirm:outerHTML,#showConfirm:outerHTML\" class=\"z-[2222] cursor-pointer size-4 absolute right-3 top-2\" hx-trigger=\"click\"><img")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, srcAttrs(toggle.Password))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" alt=\"show/hide\"></div><input")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("post", Toggle{Password: toggle.Password, ConfirmPass: "hide"}, false))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(false))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, typeAttrs("hide"))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"passwordConfirm\" id=\"passwordConfirm\" hx-swap=\"multi:#swap2:outerHTML,#submit3:outerHTML\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var35 string
			templ_7745c5c3_Var35, templ_7745c5c3_Err = templ.JoinStringErrs(values.PasswordConfirm)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 593, Col: 33}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var35))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" required hx-indicator=\"#loading\" hx-sync=\"closest form:drop\"><div id=\"showConfirm\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("toggle", Toggle{Password: toggle.Password, ConfirmPass: "hide"}, false))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-swap=\"multi:#passwordConfirm:outerHTML,#showConfirm:outerHTML,#password:outerHTML,#show:outerHTML\" class=\"z-[2222] cursor-pointer size-4 absolute right-3 top-2\" hx-trigger=\"click\"><img")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, srcAttrs("hide"))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" alt=\"show/hide\"></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<input")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("post", Toggle{Password: toggle.Password, ConfirmPass: "show"}, true))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(false))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, typeAttrs(toggle.Password))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"password\" id=\"password\" hx-swap=\"multi:#swap2:outerHTML,#submit3:outerHTML\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var36 string
			templ_7745c5c3_Var36, templ_7745c5c3_Err = templ.JoinStringErrs(values.Password)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 609, Col: 26}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var36))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" required hx-indicator=\"#loading\" hx-sync=\"closest form:drop\"> <label for=\"password\">Password</label><div id=\"show\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("toggle", Toggle{Password: toggle.Password, ConfirmPass: "show"}, true))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-swap=\"multi:#password:outerHTML,#show:outerHTML,#passwordConfirm:outerHTML,#showConfirm:outerHTML\" class=\"z-[2222] cursor-pointer size-4 absolute right-3 top-2\" hx-trigger=\"click\"><img")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, srcAttrs(toggle.Password))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" alt=\"show/hide\"></div><input")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("post", Toggle{Password: toggle.Password, ConfirmPass: "show"}, false))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(false))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, typeAttrs("show"))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"passwordConfirm\" id=\"passwordConfirm\" hx-swap=\"multi:#swap2:outerHTML,#submit3:outerHTML\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var37 string
			templ_7745c5c3_Var37, templ_7745c5c3_Err = templ.JoinStringErrs(values.PasswordConfirm)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 625, Col: 33}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var37))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" required hx-indicator=\"#loading\" hx-sync=\"closest form:drop\"><div id=\"showConfirm\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, hxAttrs("toggle", Toggle{Password: toggle.Password, ConfirmPass: "show"}, false))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-swap=\"multi:#passwordConfirm:outerHTML,#showConfirm:outerHTML,#password:outerHTML,#show:outerHTML\" class=\"z-[2222] cursor-pointer size-4 absolute right-3 top-2\" hx-trigger=\"click\"><img")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, srcAttrs("show"))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" alt=\"show/hide\"></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func Page4Full(data RegisterPageData) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var38 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var38 == nil {
			templ_7745c5c3_Var38 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var39 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"container\" class=\"w-full justify-center\"><div class=\"mt-10 lg:mt-20\"><img src=\"assets/favicon_light/android-chrome-512x512.png\" alt=\"Light Logo\" class=\"max-w-sm mx-auto px-6 pb-1 md:pb-4 size-32 object-contain\" x-show=\"theme === &#39;dark&#39;\"> <img src=\"assets/favicon_dark/android-chrome-512x512.png\" alt=\"Dark Logo\" class=\"max-w-sm mx-auto px-6 pb-1 md:pb-4 size-32 object-contain\" x-show=\"theme === &#39;light&#39;\"><div id=\"register-card\" class=\"max-w-sm sm:max-w-lg mx-auto sm:border sm:rounded-md sm:shadow-sm py-12 px-6 flex flex-col gap-8\"><h2 class=\"text-center text-2xl font-medium\">Signup</h2>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = Page4(&data.FormValues, data.FormErrors).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layouts.App().Render(templ.WithChildren(ctx, templ_7745c5c3_Var39), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func Page4(values *RegisterFormValues, errors v.Errors) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var40 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var40 == nil {
			templ_7745c5c3_Var40 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<form")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, htmxAttrs("post", fmt.Sprintf("/signup?id=%s", values.Uuid)))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" class=\"slide-transition flex flex-col gap-4\" hx-target=\"#container\" hx-swap=\"outerHTML transition:true\" hx-indicator=\".progress\" enctype=\"multipart/form-data\"><div class=\"w-40 h-40 mx-auto border-4 rounded-full shadow-md overflow-hidden items-center\"><div id=\"image-preview\" class=\"w-full h-full rounded-full flex items-center justify-center text-center overflow-hidden\"><input id=\"upload\" type=\"file\" name=\"profilePic\" class=\"hidden\" accept=\"image/*\" onchange=\"showImageModal(event)\"> <label for=\"upload\" class=\"size-full flex items-center justify-center rounded-full cursor-pointer hover:opacity-50 transition-opacity duration-200\"><img id=\"profile-image\" name=\"profile-image\" class=\"w-full h-full object-cover\" src=\"assets/icons/blank-user-profile.png\" alt=\"Profile Image\"></label></div></div><div id=\"swap\"><div class=\"input-group flex flex-col gap-1\"><input hx-post=\"/registration?check=username\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(errors.Has("username")))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"username\" id=\"username\" hx-swap=\"multi:#swap:outerHTML,#submit4:outerHTML\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var41 string
		templ_7745c5c3_Var41, templ_7745c5c3_Err = templ.JoinStringErrs(values.Username)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 696, Col: 28}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var41))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" autocomplete=\"username\" hx-indicator=\"#loading\" required hx-sync=\"closest form:abort\"> <label for=\"username\">Username </label><div id=\"loading\" class=\"htmx-indicator absolute right-3 top-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Loading().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if errors.Has("username") {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"text-red-500 text-xs\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var42 string
			templ_7745c5c3_Var42, templ_7745c5c3_Err = templ.JoinStringErrs(errors.Get("username")[0])
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 710, Col: 65}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var42))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><input type=\"hidden\" name=\"croppedImageData\" id=\"croppedImageData\" class=\"\"> <button id=\"submit4\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, buttonAttrs(true, "submit4"))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(">Signup</button></form><div id=\"image-modal\" class=\"hidden fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center z-[2222] pointer-events-auto\"><div class=\"bg-white p-6 rounded-lg w-full max-w-md mx-auto relative flex justify-center items-center flex-col\"><button onclick=\"closeModal()\" class=\"absolute top-4 right-4 text-gray-500 hover:text-gray-700 size-4\"><img src=\"assets/icons/close.png\" alt=\"\"></button><h2 class=\"text-center text-xl text-primary-foreground font-semibold mb-4\">Edit Profile Picture</h2><!-- Cropper Container with Circular Mask --><div id=\"crop-container\" class=\"border-2 w-48 h-48 rounded-lg bg-white overflow-hidden\"><img id=\"crop-image\" class=\"w-full h-full\" src=\"\" alt=\"Crop Image\"></div><div class=\"flex items-center justify-between my-4\"><label for=\"rotate-range\" class=\"text-sm text-gray-600\">Rotate:</label> <input type=\"range\" id=\"rotate-range\" min=\"0\" max=\"180\" step=\"1\" value=\"0\" class=\"w-full ml-4\" onchange=\"setRotate()\"></div><div class=\"flex justify-between\"><button id=\"save\" class=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\" onclick=\"cropImage()\">Save</button></div></div></div><script id=\"modal-js\">\n\t\tlet cropper;\n\t\tvar croppable = false;\n\t\tfunction getRoundedCanvas(sourceCanvas) {\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      var width = sourceCanvas.width;\n      var height = sourceCanvas.height;\n\n      canvas.width = width;\n      canvas.height = height;\n      context.imageSmoothingEnabled = true;\n      context.drawImage(sourceCanvas, 0, 0, width, height);\n      context.globalCompositeOperation = 'destination-in';\n      context.beginPath();\n      context.arc(width / 2, height / 2, Math.min(width, height) / 2, 0, 2 * Math.PI, true);\n      context.fill();\n      return canvas;\n    }\n\n\t\tfunction showImageModal(event) {\n\t\t\t\tconst file = event.target.files[0];\n\t\t\t\tif (file) {\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.onload = function(e) {\n\t\t\t\t\t\t\t\tconst img = document.getElementById('crop-image');\n\t\t\t\t\t\t\t\timg.src = e.target.result;\n\t\t\t\t\t\t\t\tdocument.getElementById('image-modal').classList.remove('hidden');\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcropper = new Cropper(img, {\n\t\t\t\t\t\t\t\t\t\tdragMode: 'move',\n\t\t\t\t\t\t\t\t\t\taspectRatio: 1,\n\t\t\t\t\t\t\t\t\t\tviewMode: 1,\n\t\t\t\t\t\t\t\t\t\tresponsive: true,\n\t\t\t\t\t\t\t\t\t\trestore: false,\n\t\t\t\t\t\t\t\t\t\tguides: false,\n\t\t\t\t\t\t\t\t\t\tcenter: false,\n\t\t\t\t\t\t\t\t\t\thighlight: false,\n\t\t\t\t\t\t\t\t\t\tcropBoxMovable: false,\n\t\t\t\t\t\t\t\t\t\tcropBoxResizable: false,\n\t\t\t\t\t\t\t\t\t\ttoggleDragModeOnDblclick: false,\n\t\t\t\t\t\t\t\t\t\tminContainerWidth:160,\n\t\t\t\t\t\t\t\t\t\tminContainerHeight:160,\n\t\t\t\t\t\t\t\t\t\tminCanvasWidth:160,\n\t\t\t\t\t\t\t\t\t\tminCanvasHeight:160,\n\t\t\t\t\t\t\t\t\t\tminCropBoxWidth:160,\n\t\t\t\t\t\t\t\t\t\tminCropBoxHeight:160,\n\t\t\t\t\t\t\t\t\t\tready: function () {\n\t\t\t\t\t\t\t\t\t\t\tcroppable = true;\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(file);\n\t\t\t\t}\n\t\t}\n\n\t\tfunction setRotate() {\n\t\t\tconst rotateValue = document.getElementById('rotate-range').value;\n\t\t\tcropper.rotateTo(rotateValue);\n\t\t}\n\t\tfunction closeModal() {\n    \tconst modal=document.getElementById('image-modal')\n\t\t\tif (modal){\n\t\t\t\tmodal.classList.add('hidden');\n\t\t\t}\n\n    \tif (cropper) {\n        cropper.destroy();\n\t\t\t\tcropper=null;\n    \t}\n\t\t\tdocument.getElementById('upload').value='';\n\t\t}\n\t\tvar croppedImageURL\n\n\n\t\tfunction cropImage() {\n    \tif (cropper && croppable) {\n        const canvas = cropper.getCroppedCanvas({\n            width: 400,\n            height: 400,\n            imageSmoothingQuality: 'high'\n        });\n\t\t\t\troundedCanvas= getRoundedCanvas(canvas)\n        roundedCanvas.toBlob((blob) => {\n            const file = new File([blob], 'cropped-image.jpg', { type: 'image/jpeg' });\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t// const formData = new FormData();\n            // formData.append('croppedImage', blob, 'cropped-image.jpg');\n\n\t\t\t\t\t\t// Convert file to base64 string\n            const reader = new FileReader();\n            reader.onloadend = function() {\n                const base64data = reader.result.split(',')[1]; // Get base64 string without the prefix\n                document.getElementById('croppedImageData').value = base64data;\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(file);\n                //console.log('Success:', result);\n\t\t\t\t\t\tcroppedImageURL = URL.createObjectURL(file);\n            document.getElementById('profile-image').src = croppedImageURL;\n\t\t\t\t\t\tif (document.getElementById('username').value != \"\"){\n\t\t\t\t\t\t\tdocument.getElementById('submit4').classList.remove(\"pointer-events-none\")\n\t\t\t\t\t\t}\n            closeModal(); // Close the modal after successful upload\n        }, 'image/jpeg');\n\t\t\t\t//URL.revokeObjectURL(croppedImageURL);\n\t\t\t\tcloseModal();\n    \t}\n\t\t}\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func Username(values *RegisterFormValues, errors v.Errors) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var43 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var43 == nil {
			templ_7745c5c3_Var43 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"swap\"><div class=\"input-group flex flex-col gap-1\"><input hx-post=\"/registration?check=username\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, inputAttrs(errors.Has("username")))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"username\" id=\"username\" hx-swap=\"multi:#swap:outerHTML,#submit4:outerHTML\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var44 string
		templ_7745c5c3_Var44, templ_7745c5c3_Err = templ.JoinStringErrs(values.Username)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 858, Col: 27}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var44))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" autocomplete=\"username\" hx-indicator=\"#loading\" hx-sync=\"closest form:abort\"> <label for=\"username\">Username </label><div id=\"loading\" class=\"htmx-indicator absolute right-3 top-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Loading().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if errors.Has("username") {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"text-red-500 text-xs\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var45 string
			templ_7745c5c3_Var45, templ_7745c5c3_Err = templ.JoinStringErrs(errors.Get("username")[0])
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/templates/pages/register.templ`, Line: 871, Col: 64}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var45))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if errors.Has("username") || errors.Has("imageNotFound") {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<button id=\"submit4\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, buttonAttrs(true, "submit4"))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(">Signup</button>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<button id=\"submit4\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, buttonAttrs(false, "submit4"))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(">Signup</button>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func Button(errors v.Errors) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var46 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var46 == nil {
			templ_7745c5c3_Var46 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<button id=\"submit4\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, buttonAttrs(errors.Has("imageNotFound"), "submit4"))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(">Signup</button>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
